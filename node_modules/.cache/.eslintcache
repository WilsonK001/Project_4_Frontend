[{"/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/index.js":"1","/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/App.js":"2","/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/reportWebVitals.js":"3","/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/components/Edit.js":"4","/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/components/Add.js":"5"},{"size":500,"mtime":1629820590053,"results":"6","hashOfConfig":"7"},{"size":1788,"mtime":1629822429368,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1629820590053,"results":"9","hashOfConfig":"7"},{"size":2678,"mtime":1629821765220,"results":"10","hashOfConfig":"7"},{"size":1852,"mtime":1629821753366,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2dj8i2",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},"/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/index.js",[],"/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/App.js",["24","25"],"/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/reportWebVitals.js",[],"/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/components/Edit.js",[],["26","27"],"/Users/wilsonk/Desktop/Project_4_Frontend/dogs_frontend/src/components/Add.js",["28"],"import React, {useState, useEffect} from 'react'\n\nconst Add = (props) => {\n    let emptyDog = {id: '', name: '', breed: '', age: '', gender: '', color: '', image: '', weight: ''}\n    const [dog, setDog] = useState(emptyDog)\n\n    // Creating handlers\n    const handleChange = (event) => {\n        setDog({...dog, [event.target.name]: event.target.value})\n    }\n\n    const handleSubmit = (event) =>{\n        event.preventDefault()\n        props.handleCreate(dog)\n    }\n    return(\n      <>\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"id\">ID:</label>\n            <input type=\"number\" id=\"id\" \n            onChange={handleChange}/>\n            \n            <br />\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"text\" name=\"name\" \n            onChange={handleChange}/>\n            <br />\n            <label htmlFor=\"breed\">Breed:</label>\n            <input type=\"text\" breed=\"breed\" \n            onChange={handleChange}/>\n            <br />\n            <label htmlFor=\"age\">Age: </label>\n            <input type=\"number\" name=\"age\" \n            onChange={handleChange}/>\n            <br />\n            <label htmlFor=\"gender\">Gender:</label>\n            <input type=\"text\" gender=\"gender\" \n            onChange={handleChange}/>\n            <br />\n            <label htmlFor=\"color\">Color:</label>\n            <input type=\"text\" color=\"color\" \n            onChange={handleChange}/>\n            <br />\n            <label htmlFor=\"image\">Image:</label>\n            <input type=\"text\" image=\"image\" \n            onChange={handleChange}/>\n            <br />\n            <label htmlFor=\"age\">Age: </label>\n            <input type=\"number\" name=\"age\"\n            onChange={handleChange} />\n            <br />\n            <br />\n            <input type=\"submit\"/>\n\n        </form>\n    </>\n    )\n}\n\nexport default Add",{"ruleId":"29","severity":1,"message":"30","line":5,"column":8,"nodeType":"31","messageId":"32","endLine":5,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":34,"column":10,"nodeType":"31","messageId":"32","endLine":34,"endColumn":22},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"29","severity":1,"message":"38","line":1,"column":26,"nodeType":"31","messageId":"32","endLine":1,"endColumn":35},"no-unused-vars","'Edit' is defined but never used.","Identifier","unusedVar","'handleUpdate' is assigned a value but never used.","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]